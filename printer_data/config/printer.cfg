# [include shell_command.cfg]
[include mainsail.cfg]
[include KAMP_Settings.cfg]
[exclude_object] # for adaptive bed mesh

#[include lis2dw.cfg] # for input shaping, uncomment to use accelerometer
#[input_shaper]
# shaper_type_x = mzv
# shaper_freq_x = 0
# shaper_type_y = mzv
# shaper_freq_y = 0

[skew_correction]


[stepper_x]
#step_pin: PC2
#dir_pin: PB9
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
#rotation_distance: 40
rotation_distance: 39.81
endstop_pin: ^PA5
position_endstop: -5.0
position_min: -5.0
position_max: 275.0
homing_speed: 50

[stepper_y]
#step_pin: PB8
#dir_pin: PB7
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
#rotation_distance: 40
rotation_distance: 39.75
endstop_pin: ^PA6
position_endstop: -2.0
position_min: -2.0
position_max: 300.0
homing_speed: 50

[stepper_z]
#step_pin: PB6
#dir_pin: !PB5
step_pin: PB5
dir_pin: PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 215.0
position_min: -10

[extruder]
#step_pin: PB4
#dir_pin: PB3
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
gear_ratio: 42:12
rotation_distance: 26.09541
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 23.561
#pid_Ki: 1.208
#pid_Kd: 114.859
min_temp: 0
max_temp: 300
max_extrude_only_distance: 301
max_extrude_cross_section: 5

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[respond]
default_type: command

[pause_resume] recover_velocity: 50

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 375
max_accel: 3400
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

[safe_z_home]
home_xy_position: 110.0, 115.0 # Nozzle coordinates
speed: 50
z_hop: 10
z_hop_speed: 5

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[bed_mesh]
speed: 150
horizontal_move_z: 8
mesh_min: 0.0, 0.0
mesh_max: 231.0, 179.0
probe_count: 6,6
algorithm: bicubic

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -31.5
y_offset: -41.0
#z_offset: 2.6
probe_with_touch_mode: true
stow_on_each_sample: true

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Heat bed for probing
    M190 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # If you are generating a new bed mesh:
    BED_MESH_CALIBRATE ADAPTIVE=1
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Set and wait for nozzle to reach printing temperature
    M109 S{EXTRUDER_TEMP}

    LINE_PURGE
    
    SKEW_PROFILE LOAD=CaliFlower
    
    # Start printing! 

[gcode_macro END_PRINT]
gcode:
    SET_SKEW CLEAR=1
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

[screws_tilt_adjust] # ! PROBABLY NEEDS TO BE RECALCULATED !
screw1: 64, 72
screw1_name: front left screw
screw2: 234, 72
screw2_name: front right screw
screw3: 234, 224
screw3_name: rear right screw
screw4: 64, 224
screw4_name: rear left screw
horizontal_move_z: 10
speed: 100   #speed of travel moves between screws
screw_thread: CW-M4  #measure your bed screw m3=3mm / m4=4mm / m5=5mm

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.866
#*# pid_ki = 1.268
#*# pid_kd = 94.297
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.764
#*# pid_ki = 1.110
#*# pid_kd = 1064.988
#*#
#*# [bltouch]
#*# z_offset = 3.430
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.357500, 0.222500, 0.102500, -0.010000, -0.125000, -0.120000
#*# 	0.335000, 0.142500, 0.027500, -0.097500, -0.177500, -0.232500
#*# 	0.347500, 0.097500, -0.037500, -0.145000, -0.250000, -0.267500
#*# 	0.470000, 0.060000, -0.052500, -0.197500, -0.277500, -0.277500
#*# 	0.317500, 0.067500, -0.040000, -0.175000, -0.270000, -0.275000
#*# 	0.335000, 0.130000, -0.017500, -0.095000, -0.200000, -0.210000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 0.0
#*# max_x = 231.0
#*# min_y = 0.0
#*# max_y = 178.95
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 57.2
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 69.8
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = -0.0007983251680274182
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [skew_correction Califlower]
#*# xy_skew = -0.00019870224165215535
#*# xz_skew = 0.0
#*# yz_skew = 0.0
